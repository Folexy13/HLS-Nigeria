Fertilboost Men--182
Pregnacare Original--183
Pregnacare Max--184
Pregnacare Plus--185
Wellman Plus--186
Wellman Sport--187
Wellman Max--188
Wellwoman Skin--189
Wellwoman Plus--190
Wellwoman Sport--191
Magnesium--253
Osteocare--193
Nat B--194
Visionace Max--195
Cellgevity--196
Neurozan--269
Pregnacare Conception for Her--198
Pregnacare Breastfeeding--200
Wellman--201
Wellman 50+--202
Wellman 70+--203
Wellwoman--204
Wellwoman 50+--205
Wellwoman 70+--206
Pregnacare Conception for Him by ['Vitabiotics']******* yet to be resolved




for supplement in data:
    # Get the supplement name from the JSON data
    supplement_name = supplement['name']
    product = Product.objects.filter(name=supplement_name).first()
    if product:
        print(f"{supplement_name}--{product.id}")

import re
import os
import json
from decimal import Decimal
from NT_gallery.models import Product
from NT_gallery.models import LSV
from NT_gallery.models import Flag_condition


def show_duplicate_products():
    products = Product.objects.all().order_by('-created_at')
    unique_products = {}
    duplicate_products = []
    for product in products:
        if product.name not in unique_products:
            unique_products[product.name] = product
        else:
            print(f"show duplicate product: {product.name}")
            duplicate_products.append(product.name)
    print("duplicate products:")
    for product in duplicate_products:
        print(product)

show_duplicate_products()


def remove_duplicate_products():
    products = Product.objects.all().order_by('-created_at')
    unique_products = {}
    deleted_products = []
    for product in products:
        if product.name not in unique_products:
            unique_products[product.name] = product
        else:
            print(f"Deleting older product: {product.name}")
            deleted_products.append(product.name)
            product.delete()
        data[:] = [product if product not in deleted_products]
        with open('NT_gallery/fixtures/Generalproducts.json', 'w') as f:
            json.dump(data, f, indent=4)

remove_duplicate_products()

def remove_duplicate_products():
    products = Product.objects.all().order_by('-created_at')
    unique_products = {}
    deleted_products = []
    for product in products:
        if product.name not in unique_products:
            unique_products[product.name] = product
        else:
            print(f"Deleting older product: {product.name}")
            deleted_products.append(product.name)
            product.delete()
    # Refresh the products queryset after deletion
    products = Product.objects.all()
    # Create a list of unique products
    unique_products_list = list(unique_products.values())
    with open('NT_gallery/fixtures/Generalproducts.json', 'w') as f:
        json.dump([product.__dict__ for product in unique_products_list], f, indent=4)

remove_duplicate_products()


def trim_out_duplicate_products():
    unique_products = {}
    duplicate = []
    for product in data:
        if product['name'] not in unique_products:
            unique_products[product['name']] = product['name']
        else:
            print(f"Deleting older product: {product['name']}")
            duplicate.append(product)
    # Remove duplicates from the data list
    data[:] = [product for product in data if product not in duplicate]
    print("Unique products:")
    for product_name in unique_products:
        print(product_name)
    print("----------------------------------------------------------------")
    with open('NT_gallery/fixtures/Generalproducts.json', 'w') as f:
        json.dump(data, f, indent=4)

trim_out_duplicate_products()

(Renaming a Product)
To rename a product, you can retrieve the product instance and update its name field:

product = Product.objects.get(id=product_id)
product.name = new_name
print(product.name)
product.save()


products = Product.objects.all()
for product in products:
    old_picture_name = product.main_image.name
    filename, extension = os.path.splitext(old_picture_name)
    new_picture_name = f"product_image/{product.name}{extension}"
    product.main_image.name = new_picture_name
    product.save()
    print(f'{product.name}-{product.main_image.url}')


for filename in os.listdir(fixtures):
    if filename.endswith('.json'):
        with open(os.path.join(fixtures, filename), 'r+') as file:
            data = json.load(file)
            for item in data:
                old_picture_name = item['main_image']
                filename, extension = os.path.splitext(old_picture_name)
                new_picture_name = f"product_image/{item['name']}{item['sub_categories']['brands']}{item['strength']}{extension}"
                item['image'] = new_picture_name
                if item['sub_categories']['brands']:
                    print(f"{item['name']} - {new_picture_name}")
            file.seek(0)
            json.dump(data, file, indent=4)

import os

folder_path = 'C:/Users/HLS Nigeria/Downloads/product_pics'
file_list = os.listdir(folder_path)

for file_name in file_list:
    file_path = os.path.join(folder_path, file_name)
    product_id = file_name.split('.')[0]
    # Check if file name is already the same as the product name
    if file_name == f"{Product.objects.get(id=int(product_id)).name}.{file_name.split('.')[-1]}":
        print(f"Product already renamed for file: {file_name}")
        continue
    # Check if product_id is a digit
    if not product_id.isdigit():
        print(f"Match or product not found for previous file name: {file_name}")
        continue
    try:
        product = Product.objects.get(id=int(product_id))
        new_file_name = f"{product.name}.{file_name.split('.')[-1]}"
        print(f"Previous file name: {file_name}")
        print(f"New file name: {new_file_name}")
        print("------------------------")
        os.rename(file_path, os.path.join(folder_path, new_file_name))
    except Exception as e:
        print(f"Error renaming file {file_name}: {str(e)}")

def print_product_names():
    product_names = Product.objects.values_list('name', flat=True)
    print(list(product_names))